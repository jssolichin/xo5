</article><!--article#content-->
</div><!--main-area-->
  #set ($version = $xwiki.getSpacePreference('version'))
  #if ("$!version" == "")
    #set ($version = $xwiki.getXWikiPreference("version"))
  #end
  #if ("$!version" != "")
    #set ($version = $xwiki.parseContent($version))
  #else
    #set ($version = $!xwiki.version)
  #end
##        <footer>
##          <p>$!copyright | $!version</p>
##        </footer>

<script>

$j(document).ready(function() {
  resizeControl();
});

// make sure things are ok even when we adjust window && recheck positions of section when resized-- need to optimize somehow.
$j(window).resize(function () { 
  resizeControl();
});

// allow resizing of sidebar&create dropdown only if no-touch (provided by modernizr) & greater than 600px
function resizeControl () {
  if( $j('html.no-touch').length && $j(window).width() > 600 ) {
    $j("#main-area").width($j(window).width()-$j("#sidebar").width());
    $j( "#sidebar" ).resizable({ minWidth: 290, maxWidth: 800, handles: "w"}).css({'left': $j("#main-area").position().left+$j("#main-area").width(), 'bottom': 0, 'top': ''});

    $j('header').width($j('#sidebar').width());
  }
  else {
    $j("#main-area").width('95%');
    $j('header').width('95%');
    $j('#sidebar').height('').width('');

    if(!($j('#sidebar-control-selector').length)) { //checks to make sure only do onece
      createDrop();

      //mobile implementation
      // make #sidebar-handle vertically fixed
      $j(window).scroll(function(){
          $j( "#sidebar-handle" ).css({
            'top': $j(window).scrollTop()+180
          });
      });
      // shortcut to menu/content in #sidebar-handle
      $j( "#to-menu" ).click(function() {
          window.scrollTo(390,window.pageYOffset);
          return false;
      });
      $j( "#to-content" ).click(function() {
          window.scrollTo(0,window.pageYOffset);
          return false;
      });

      // shrink content area on mobile to be toggle able
      $j('article section h2').click(function() {
          $j(this).next('.section-content').slideToggle(200,function() {
            $j(this).prev('article section h2').toggleClass('expanded');
          });
      });
    }
  }

  //changing the link header only matters if >600px and you see it.
  if($j(window).width() > 600 ) {
    // .active is used to put the current section as the title header (for the dropdown menu)
    // apply .active on click since scroll detection might not be triggered
    $j("#nav-control ul li").click(function(){
        $j(".active").removeClass('active');
        $j(this).addClass('active')
      });

    // indicate which section at while scrolling and apply .active to active section
    $j("#change").scroll(function(){
      // first get position of div from the top. then check if that position has now become 0. if it has become 0, then viewer is in that section. However since, we originally have a title there, we will offset 25 so that the section is activated once the original title go above the view. Additionally, check that it is within the div's position from the top + the height of the div. 
      $j('#sidebar-control-links ul li').each(function(){
        var el = $j(this).children('a').attr('href');
        if($j(el).position().top <= 0 && $j(el).position().top >0-$j(el).height()){
          $j(".active").removeClass('active');
          $j(this).addClass('active');
        }
      });
      //the last section is a bit different since if the viewer can no longer scroll, that means he is in the last section. 
      if($j("#change")[0].scrollHeight - $j("#change").scrollTop() == $j("#change").outerHeight()){
        $j(".active").removeClass('active');
        $j("#edit-link").addClass('active')
      }
    });
  }

}

function createDrop () {
//--- start drop down creator 
  // Create the dropdown base
  $j("<select />").addClass('mobile').attr('id', 'sidebar-control-selector').appendTo("#sidebar-control");

  // Create default option "Go to..."
  $j("<option />", {
     "selected": "selected",
     "value"   : "",
     "text"    : "Go to..."
  }).appendTo("#sidebar-control-selector");

  // Populate dropdown with menu items
  $j("#sidebar-control-links ul li a").each(function() {
   var el = $j(this);
   $j("<option />", {
       "value"   : el.attr("href"),
       "text"    : el.text()
   }).appendTo("#sidebar-control-selector");
  });

  //move to targeted drop down
  $j("#sidebar-control-selector").change(function() {
    window.location = $j(this).find("option:selected").val();
  });

  //samething for breadcrumb
  $j('#breadcrumb > ul > li').each(function(index){
    $j("<select />").addClass('mobile breadcrumb-drop').appendTo($j(this));
    var dropdown= $j(this).find($j('select'));
    $j("<option />", {
       "selected": "selected",
       "value"   : "",
       "text"    : "Go to..."
    }).appendTo(dropdown);

    $j(this).find('a').each(function() {
     var el = $j(this);
     $j("<option />", {
         "value"   : el.attr("href"),
         "text"    : el.text()
     }).appendTo(dropdown);
    });

    $j($j(this).children($j('select'))).change(function() {
      window.location = $j(this).find("option:selected").val();
    });
  });
//--- end drop down creator 
}
</script>
  </body>
</html>
